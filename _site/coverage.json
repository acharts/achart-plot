{
  "instrumentation": "node-jscoverage",
  "sloc": 134,
  "hits": 134,
  "misses": 0,
  "coverage": 100,
  "files": [
    {
      "filename": "/Users/dxq613/Desktop/work/acharts/achart-plot/src/plotback.js",
      "coverage": 100,
      "hits": 51,
      "misses": 0,
      "sloc": 51,
      "source": {
        "1": {
          "source": "/**",
          "coverage": ""
        },
        "2": {
          "source": " * @fileOverview 坐标系内部区域,用于显示背景",
          "coverage": ""
        },
        "3": {
          "source": " * @ignore",
          "coverage": ""
        },
        "4": {
          "source": " */",
          "coverage": ""
        },
        "5": {
          "source": "",
          "coverage": ""
        },
        "6": {
          "source": "",
          "coverage": ""
        },
        "7": {
          "source": "var Util = require('achart-util'),",
          "coverage": 1
        },
        "8": {
          "source": "\tPlotItem = require('./plotitem'),",
          "coverage": ""
        },
        "9": {
          "source": "\tPlotRange = require('./plotrange');",
          "coverage": ""
        },
        "10": {
          "source": "",
          "coverage": ""
        },
        "11": {
          "source": "/**",
          "coverage": ""
        },
        "12": {
          "source": " * @class Chart.PlotBack",
          "coverage": ""
        },
        "13": {
          "source": " * @protected",
          "coverage": ""
        },
        "14": {
          "source": " * 决定图表的边框、背景",
          "coverage": ""
        },
        "15": {
          "source": " * @extends Chart.PlotItem",
          "coverage": ""
        },
        "16": {
          "source": " */",
          "coverage": ""
        },
        "17": {
          "source": "var PlotBack = function(cfg){",
          "coverage": 1
        },
        "18": {
          "source": "\tPlotBack.superclass.constructor.call(this,cfg);",
          "coverage": 2
        },
        "19": {
          "source": "};",
          "coverage": ""
        },
        "20": {
          "source": "",
          "coverage": ""
        },
        "21": {
          "source": "PlotBack.ATTRS = {",
          "coverage": 1
        },
        "22": {
          "source": "",
          "coverage": ""
        },
        "23": {
          "source": "\telCls : 'x-chart-back',",
          "coverage": ""
        },
        "24": {
          "source": "\t",
          "coverage": ""
        },
        "25": {
          "source": "\tzIndex : 0,",
          "coverage": ""
        },
        "26": {
          "source": "\t/**",
          "coverage": ""
        },
        "27": {
          "source": "\t * 边距，来决定绘图范围,如果是一个值那么4个边框都是统一的数字，如果是一个数组，则4个边框分别对应值",
          "coverage": ""
        },
        "28": {
          "source": "\t * @type {Array|Number}",
          "coverage": ""
        },
        "29": {
          "source": "\t */",
          "coverage": ""
        },
        "30": {
          "source": "\tmargin : 20,",
          "coverage": ""
        },
        "31": {
          "source": "\t/**",
          "coverage": ""
        },
        "32": {
          "source": "\t * 绘图的范围",
          "coverage": ""
        },
        "33": {
          "source": "\t * @type {Object}",
          "coverage": ""
        },
        "34": {
          "source": "\t */",
          "coverage": ""
        },
        "35": {
          "source": "\tplotRange : null,",
          "coverage": ""
        },
        "36": {
          "source": "\t/**",
          "coverage": ""
        },
        "37": {
          "source": "\t * 背景",
          "coverage": ""
        },
        "38": {
          "source": "\t * @type {Object}",
          "coverage": ""
        },
        "39": {
          "source": "\t */",
          "coverage": ""
        },
        "40": {
          "source": "\tbackground : null,",
          "coverage": ""
        },
        "41": {
          "source": "\t/**",
          "coverage": ""
        },
        "42": {
          "source": "\t * 最外层边框的配置项",
          "coverage": ""
        },
        "43": {
          "source": "\t * @type {Object}",
          "coverage": ""
        },
        "44": {
          "source": "\t */",
          "coverage": ""
        },
        "45": {
          "source": "\tborder : null",
          "coverage": ""
        },
        "46": {
          "source": "};",
          "coverage": ""
        },
        "47": {
          "source": "",
          "coverage": ""
        },
        "48": {
          "source": "Util.extend(PlotBack,PlotItem);",
          "coverage": 1
        },
        "49": {
          "source": "",
          "coverage": ""
        },
        "50": {
          "source": "Util.augment(PlotBack,{",
          "coverage": 1
        },
        "51": {
          "source": "",
          "coverage": ""
        },
        "52": {
          "source": "\tbeforeRenderUI : function(){",
          "coverage": ""
        },
        "53": {
          "source": "\t\tPlotBack.superclass.beforeRenderUI.call(this);",
          "coverage": 2
        },
        "54": {
          "source": "\t\tthis._calculateRange();",
          "coverage": 2
        },
        "55": {
          "source": "\t},",
          "coverage": ""
        },
        "56": {
          "source": "",
          "coverage": ""
        },
        "57": {
          "source": "\trenderUI : function(){",
          "coverage": ""
        },
        "58": {
          "source": "\t\tPlotBack.superclass.renderUI.call(this);",
          "coverage": 2
        },
        "59": {
          "source": "\t\tthis._renderBorder();",
          "coverage": 2
        },
        "60": {
          "source": "\t\tthis._renderBackground();",
          "coverage": 2
        },
        "61": {
          "source": "\t},",
          "coverage": ""
        },
        "62": {
          "source": "\trepaint : function(){",
          "coverage": ""
        },
        "63": {
          "source": "\t\tthis._calculateRange();",
          "coverage": 3
        },
        "64": {
          "source": "\t\tthis._renderBorder();",
          "coverage": 3
        },
        "65": {
          "source": "\t\tthis._renderBackground();",
          "coverage": 3
        },
        "66": {
          "source": "\t},",
          "coverage": ""
        },
        "67": {
          "source": "\t//渲染边框",
          "coverage": ""
        },
        "68": {
          "source": "\t_renderBorder : function(){",
          "coverage": ""
        },
        "69": {
          "source": "\t\tvar _self = this,",
          "coverage": 5
        },
        "70": {
          "source": "\t\t\tborder = _self.get('border'),",
          "coverage": ""
        },
        "71": {
          "source": "\t\t\tcanvas = _self.get('canvas'),",
          "coverage": ""
        },
        "72": {
          "source": "\t\t\trect = _self.get('borderShape'),",
          "coverage": ""
        },
        "73": {
          "source": "\t\t\tcfg;",
          "coverage": ""
        },
        "74": {
          "source": "",
          "coverage": ""
        },
        "75": {
          "source": "\t\tif(border){",
          "coverage": 5
        },
        "76": {
          "source": "\t\t\tvar width = canvas.get('width'),",
          "coverage": 5
        },
        "77": {
          "source": "\t\t\t\t\theight = canvas.get('height');",
          "coverage": ""
        },
        "78": {
          "source": "\t\t\tif(!rect){",
          "coverage": 5
        },
        "79": {
          "source": "\t\t\t\tcfg = Util.mix({",
          "coverage": 2
        },
        "80": {
          "source": "\t\t\t\t\twidth : width,",
          "coverage": ""
        },
        "81": {
          "source": "\t\t\t\t\theight :height",
          "coverage": ""
        },
        "82": {
          "source": "\t\t\t\t},border);",
          "coverage": ""
        },
        "83": {
          "source": "",
          "coverage": ""
        },
        "84": {
          "source": "\t\t\t  rect = this.addShape('rect',cfg);",
          "coverage": 2
        },
        "85": {
          "source": "\t\t\t\tthis.set('borderShape',rect);",
          "coverage": 2
        },
        "86": {
          "source": "\t\t\t}else{",
          "coverage": ""
        },
        "87": {
          "source": "\t\t\t\trect.attr({",
          "coverage": 3
        },
        "88": {
          "source": "\t\t\t\t\twidth : width,",
          "coverage": ""
        },
        "89": {
          "source": "\t\t\t\t\theight : height",
          "coverage": ""
        },
        "90": {
          "source": "\t\t\t\t});",
          "coverage": ""
        },
        "91": {
          "source": "\t\t\t}",
          "coverage": ""
        },
        "92": {
          "source": "\t\t}",
          "coverage": ""
        },
        "93": {
          "source": "\t},",
          "coverage": ""
        },
        "94": {
          "source": "\t//渲染背景",
          "coverage": ""
        },
        "95": {
          "source": "\t_renderBackground : function(){",
          "coverage": ""
        },
        "96": {
          "source": "\t\tvar _self = this,",
          "coverage": 5
        },
        "97": {
          "source": "\t\t\tbackground = _self.get('background'),",
          "coverage": ""
        },
        "98": {
          "source": "\t\t\tplotRange = _self.get('plotRange'),",
          "coverage": ""
        },
        "99": {
          "source": "\t\t\tbackShape = _self.get('backShape'),",
          "coverage": ""
        },
        "100": {
          "source": "\t\t\twidth,",
          "coverage": ""
        },
        "101": {
          "source": "\t\t\theight,",
          "coverage": ""
        },
        "102": {
          "source": "\t\t\ttl,",
          "coverage": ""
        },
        "103": {
          "source": "\t\t\tcfg;",
          "coverage": ""
        },
        "104": {
          "source": "",
          "coverage": ""
        },
        "105": {
          "source": "\t\tif(background){",
          "coverage": 5
        },
        "106": {
          "source": "\t\t\twidth = plotRange.getWidth();",
          "coverage": 5
        },
        "107": {
          "source": "\t\t\theight = plotRange.getHeight();",
          "coverage": 5
        },
        "108": {
          "source": "\t\t\ttl = plotRange.tl;",
          "coverage": 5
        },
        "109": {
          "source": "\t\t\tcfg = {",
          "coverage": 5
        },
        "110": {
          "source": "\t\t\t\tx : tl.x,",
          "coverage": ""
        },
        "111": {
          "source": "\t\t\t\ty : tl.y,",
          "coverage": ""
        },
        "112": {
          "source": "\t\t\t\twidth : width,",
          "coverage": ""
        },
        "113": {
          "source": "\t\t\t\theight :height",
          "coverage": ""
        },
        "114": {
          "source": "\t\t\t};",
          "coverage": ""
        },
        "115": {
          "source": "\t\t\tif(!backShape){",
          "coverage": 5
        },
        "116": {
          "source": "\t\t\t\t//图片",
          "coverage": ""
        },
        "117": {
          "source": "\t\t\t\tif(background.image){",
          "coverage": 2
        },
        "118": {
          "source": "\t\t\t\t\tcfg.src = background.image;",
          "coverage": 1
        },
        "119": {
          "source": "\t\t\t\t  backShape =\t_self.addShape('image',cfg);",
          "coverage": 1
        },
        "120": {
          "source": "\t\t\t\t}else{//矩形",
          "coverage": ""
        },
        "121": {
          "source": "\t\t\t\t\tUtil.mix(cfg,background);",
          "coverage": 1
        },
        "122": {
          "source": "\t\t\t\t\tbackShape = _self.addShape('rect',cfg);",
          "coverage": 1
        },
        "123": {
          "source": "\t\t\t\t}",
          "coverage": ""
        },
        "124": {
          "source": "\t\t\t\t_self.set('backShape',backShape);",
          "coverage": 2
        },
        "125": {
          "source": "\t\t\t}else{",
          "coverage": ""
        },
        "126": {
          "source": "\t\t\t\tbackShape.attr(cfg);",
          "coverage": 3
        },
        "127": {
          "source": "\t\t\t}",
          "coverage": ""
        },
        "128": {
          "source": "\t\t\t",
          "coverage": ""
        },
        "129": {
          "source": "\t\t}",
          "coverage": ""
        },
        "130": {
          "source": "\t},",
          "coverage": ""
        },
        "131": {
          "source": "\t//计算，设置绘图区域",
          "coverage": ""
        },
        "132": {
          "source": "\t_calculateRange : function(){",
          "coverage": ""
        },
        "133": {
          "source": "",
          "coverage": ""
        },
        "134": {
          "source": "\t\tvar _self = this,",
          "coverage": 5
        },
        "135": {
          "source": "\t\t\tmargin = _self.get('margin'),",
          "coverage": ""
        },
        "136": {
          "source": "\t\t\tcanvas = _self.get('canvas'),",
          "coverage": ""
        },
        "137": {
          "source": "\t\t\twidth = canvas.get('width'),",
          "coverage": ""
        },
        "138": {
          "source": "\t\t\theight = canvas.get('height'),",
          "coverage": ""
        },
        "139": {
          "source": "\t\t\tplotRange = _self.get('plotRange'),",
          "coverage": ""
        },
        "140": {
          "source": "\t\t\ttop = 0, //上方的边距",
          "coverage": ""
        },
        "141": {
          "source": "\t\t\tleft = 0, //左边 边距",
          "coverage": ""
        },
        "142": {
          "source": "\t\t\tright = 0,",
          "coverage": ""
        },
        "143": {
          "source": "\t\t\tbottom = 0,",
          "coverage": ""
        },
        "144": {
          "source": "\t\t\tstart, //坐标系开始的节点，从左下，到右上",
          "coverage": ""
        },
        "145": {
          "source": "\t\t\tend; //结束的节点",
          "coverage": ""
        },
        "146": {
          "source": "",
          "coverage": ""
        },
        "147": {
          "source": "\t\tif(Util.isNumber(margin)){",
          "coverage": 5
        },
        "148": {
          "source": "\t\t\ttop = left = right = bottom = margin;",
          "coverage": 3
        },
        "149": {
          "source": "\t\t}",
          "coverage": ""
        },
        "150": {
          "source": "\t\tif(Util.isArray(margin)){",
          "coverage": 5
        },
        "151": {
          "source": "\t\t\ttop = margin[0];",
          "coverage": 2
        },
        "152": {
          "source": "\t\t\tright = margin[1] != null ? margin[1] : margin[0];",
          "coverage": 2
        },
        "153": {
          "source": "\t\t\tbottom = margin[2] != null ? margin[2] : margin[0];",
          "coverage": 2
        },
        "154": {
          "source": "\t\t\tleft = margin[3] != null ? margin[3] : right;",
          "coverage": 2
        },
        "155": {
          "source": "\t\t}",
          "coverage": ""
        },
        "156": {
          "source": "",
          "coverage": ""
        },
        "157": {
          "source": "\t\tstart = canvas.getRelativePoint(left,height - bottom);",
          "coverage": 5
        },
        "158": {
          "source": "\t\tend = canvas.getRelativePoint(width - right,top);",
          "coverage": 5
        },
        "159": {
          "source": "\t\tif(!plotRange){",
          "coverage": 5
        },
        "160": {
          "source": "\t\t\tplotRange = new PlotRange(start,end);",
          "coverage": 2
        },
        "161": {
          "source": "\t\t\t_self.set('plotRange',plotRange);",
          "coverage": 2
        },
        "162": {
          "source": "\t\t}else{",
          "coverage": ""
        },
        "163": {
          "source": "\t\t\tplotRange.reset(start,end);",
          "coverage": 3
        },
        "164": {
          "source": "\t\t}",
          "coverage": ""
        },
        "165": {
          "source": "\t\t",
          "coverage": ""
        },
        "166": {
          "source": "",
          "coverage": ""
        },
        "167": {
          "source": "\t}",
          "coverage": ""
        },
        "168": {
          "source": "});",
          "coverage": ""
        },
        "169": {
          "source": "",
          "coverage": ""
        },
        "170": {
          "source": "",
          "coverage": ""
        },
        "171": {
          "source": "module.exports = PlotBack;",
          "coverage": 1
        },
        "172": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "/Users/dxq613/Desktop/work/acharts/achart-plot/src/plotitem.js",
      "coverage": 100,
      "hits": 37,
      "misses": 0,
      "sloc": 37,
      "source": {
        "1": {
          "source": "/**",
          "coverage": ""
        },
        "2": {
          "source": " * @fileOverview 所有图表内部元素的基类，继承自group",
          "coverage": ""
        },
        "3": {
          "source": " * @ignore",
          "coverage": ""
        },
        "4": {
          "source": " */",
          "coverage": ""
        },
        "5": {
          "source": "",
          "coverage": ""
        },
        "6": {
          "source": "",
          "coverage": ""
        },
        "7": {
          "source": "var Util = require('achart-util'),",
          "coverage": 1
        },
        "8": {
          "source": "\tCanvas = require('achart-canvas');",
          "coverage": ""
        },
        "9": {
          "source": "",
          "coverage": ""
        },
        "10": {
          "source": "function initClassAttrs(c){",
          "coverage": ""
        },
        "11": {
          "source": "  if(c._attrs || c == Canvas.Group){",
          "coverage": 13
        },
        "12": {
          "source": "    return;",
          "coverage": 8
        },
        "13": {
          "source": "  }",
          "coverage": ""
        },
        "14": {
          "source": "",
          "coverage": ""
        },
        "15": {
          "source": "  var superCon = c.superclass.constructor;",
          "coverage": 5
        },
        "16": {
          "source": "  if(superCon && !superCon._attrs){",
          "coverage": 5
        },
        "17": {
          "source": "    initClassAttrs(superCon);",
          "coverage": 4
        },
        "18": {
          "source": "  }",
          "coverage": ""
        },
        "19": {
          "source": "  c._attrs =  {};",
          "coverage": 5
        },
        "20": {
          "source": "  ",
          "coverage": ""
        },
        "21": {
          "source": "  Util.mix(true,c._attrs,superCon._attrs);",
          "coverage": 5
        },
        "22": {
          "source": "  Util.mix(true,c._attrs,c.ATTRS);",
          "coverage": 5
        },
        "23": {
          "source": "}",
          "coverage": ""
        },
        "24": {
          "source": "",
          "coverage": ""
        },
        "25": {
          "source": "/**",
          "coverage": ""
        },
        "26": {
          "source": " * @class Chart.PlotItem",
          "coverage": ""
        },
        "27": {
          "source": " * 图表内部元素的基类",
          "coverage": ""
        },
        "28": {
          "source": " * @extends Chart.Canvas.Group",
          "coverage": ""
        },
        "29": {
          "source": " * ",
          "coverage": ""
        },
        "30": {
          "source": " */",
          "coverage": ""
        },
        "31": {
          "source": "function Item(cfg){",
          "coverage": ""
        },
        "32": {
          "source": "\tinitClassAttrs(this.constructor);",
          "coverage": 9
        },
        "33": {
          "source": "\tItem.superclass.constructor.call(this,cfg);",
          "coverage": 9
        },
        "34": {
          "source": "};",
          "coverage": ""
        },
        "35": {
          "source": "",
          "coverage": ""
        },
        "36": {
          "source": "Item.ATTRS = {",
          "coverage": 1
        },
        "37": {
          "source": "  /**",
          "coverage": ""
        },
        "38": {
          "source": "   * 活动子项的名称，用于组成 itemactived,itemunactived的事件",
          "coverage": ""
        },
        "39": {
          "source": "   * @protected",
          "coverage": ""
        },
        "40": {
          "source": "   * @type {String}",
          "coverage": ""
        },
        "41": {
          "source": "   */",
          "coverage": ""
        },
        "42": {
          "source": "  itemName : 'item',",
          "coverage": ""
        },
        "43": {
          "source": "  /**",
          "coverage": ""
        },
        "44": {
          "source": "   * 所属分组的名称,用于事件中标示父元素",
          "coverage": ""
        },
        "45": {
          "source": "   * @protected",
          "coverage": ""
        },
        "46": {
          "source": "   * @type {String}",
          "coverage": ""
        },
        "47": {
          "source": "   */",
          "coverage": ""
        },
        "48": {
          "source": "  groupName : 'group',",
          "coverage": ""
        },
        "49": {
          "source": "",
          "coverage": ""
        },
        "50": {
          "source": "  /**",
          "coverage": ""
        },
        "51": {
          "source": "   * 事件回调，支持dom的所有事件和自定义事件",
          "coverage": ""
        },
        "52": {
          "source": "   * @type {Object}",
          "coverage": ""
        },
        "53": {
          "source": "   */",
          "coverage": ""
        },
        "54": {
          "source": "  events : null",
          "coverage": ""
        },
        "55": {
          "source": "};",
          "coverage": ""
        },
        "56": {
          "source": "",
          "coverage": ""
        },
        "57": {
          "source": "Util.extend(Item, Canvas.Group);",
          "coverage": 1
        },
        "58": {
          "source": "",
          "coverage": ""
        },
        "59": {
          "source": "Util.augment(Item,{",
          "coverage": 1
        },
        "60": {
          "source": "\t//获取默认的属性",
          "coverage": ""
        },
        "61": {
          "source": "\tgetDefaultCfg : function(){",
          "coverage": ""
        },
        "62": {
          "source": "\t\tvar _self = this,",
          "coverage": 9
        },
        "63": {
          "source": "\t\t\tcon = _self.constructor,",
          "coverage": ""
        },
        "64": {
          "source": "\t\t\tattrs = con._attrs,",
          "coverage": ""
        },
        "65": {
          "source": "\t\t\trst = Util.mix(true,{},attrs);",
          "coverage": ""
        },
        "66": {
          "source": "\t\treturn rst;",
          "coverage": 9
        },
        "67": {
          "source": "\t},",
          "coverage": ""
        },
        "68": {
          "source": "",
          "coverage": ""
        },
        "69": {
          "source": "  //绑定事件",
          "coverage": ""
        },
        "70": {
          "source": "  bindUI : function(){",
          "coverage": ""
        },
        "71": {
          "source": "    var _self = this,",
          "coverage": 9
        },
        "72": {
          "source": "      events = _self.get('events');",
          "coverage": ""
        },
        "73": {
          "source": "    if(events){",
          "coverage": 9
        },
        "74": {
          "source": "      Util.each(events,function(v,k){",
          "coverage": 1
        },
        "75": {
          "source": "        _self.on(k,v);",
          "coverage": 2
        },
        "76": {
          "source": "      });",
          "coverage": ""
        },
        "77": {
          "source": "    }",
          "coverage": ""
        },
        "78": {
          "source": "  },",
          "coverage": ""
        },
        "79": {
          "source": "  /**",
          "coverage": ""
        },
        "80": {
          "source": "   * 获取显示的子项",
          "coverage": ""
        },
        "81": {
          "source": "   * @return {Array} 显示的子项",
          "coverage": ""
        },
        "82": {
          "source": "   */",
          "coverage": ""
        },
        "83": {
          "source": "  getVisibleChildren : function(){",
          "coverage": ""
        },
        "84": {
          "source": "    var _self = this,",
          "coverage": 3
        },
        "85": {
          "source": "      children = _self.get('children');",
          "coverage": ""
        },
        "86": {
          "source": "    return Util.filter(children,function(item){",
          "coverage": 3
        },
        "87": {
          "source": "      return item.get('visible');",
          "coverage": 9
        },
        "88": {
          "source": "    });",
          "coverage": ""
        },
        "89": {
          "source": "  },",
          "coverage": ""
        },
        "90": {
          "source": "  /**",
          "coverage": ""
        },
        "91": {
          "source": "   * 显示子项",
          "coverage": ""
        },
        "92": {
          "source": "   * @param  {Chart.Canvas.Base} child 子项",
          "coverage": ""
        },
        "93": {
          "source": "   */",
          "coverage": ""
        },
        "94": {
          "source": "  showChild : function(child){",
          "coverage": ""
        },
        "95": {
          "source": "    child && child.show();",
          "coverage": 1
        },
        "96": {
          "source": "  },",
          "coverage": ""
        },
        "97": {
          "source": "  /**",
          "coverage": ""
        },
        "98": {
          "source": "   * 隐藏子项",
          "coverage": ""
        },
        "99": {
          "source": "   * @param  {Chart.Canvas.Base} child 子项",
          "coverage": ""
        },
        "100": {
          "source": "   */",
          "coverage": ""
        },
        "101": {
          "source": "  hideChild : function(child){",
          "coverage": ""
        },
        "102": {
          "source": "    child && child.hide();",
          "coverage": 1
        },
        "103": {
          "source": "  },",
          "coverage": ""
        },
        "104": {
          "source": "  /**",
          "coverage": ""
        },
        "105": {
          "source": "   * 在顶层图表控件上触发事件",
          "coverage": ""
        },
        "106": {
          "source": "   * @param {String} name 事件名称",
          "coverage": ""
        },
        "107": {
          "source": "   * @param  {Object} ev 事件对象",
          "coverage": ""
        },
        "108": {
          "source": "   */",
          "coverage": ""
        },
        "109": {
          "source": "  fireUp : function(name,ev){",
          "coverage": ""
        },
        "110": {
          "source": "    var _self = this,",
          "coverage": 2
        },
        "111": {
          "source": "      canvas = _self.get('canvas'),",
          "coverage": ""
        },
        "112": {
          "source": "      chart = canvas.chart;",
          "coverage": ""
        },
        "113": {
          "source": "    ev = ev || {};",
          "coverage": 2
        },
        "114": {
          "source": "    if(chart){",
          "coverage": 2
        },
        "115": {
          "source": "      ev.target = ev.target || chart;",
          "coverage": 2
        },
        "116": {
          "source": "      chart.fire(name,ev);",
          "coverage": 2
        },
        "117": {
          "source": "    }",
          "coverage": ""
        },
        "118": {
          "source": "  },",
          "coverage": ""
        },
        "119": {
          "source": "  /**",
          "coverage": ""
        },
        "120": {
          "source": "   * @protected",
          "coverage": ""
        },
        "121": {
          "source": "   * 在分组上触发事件",
          "coverage": ""
        },
        "122": {
          "source": "   * @param  {String} name 事件名称",
          "coverage": ""
        },
        "123": {
          "source": "   * @param  {Object} item 触发事件的子项",
          "coverage": ""
        },
        "124": {
          "source": "   * @param  {Object} obj  事件对象",
          "coverage": ""
        },
        "125": {
          "source": "   */",
          "coverage": ""
        },
        "126": {
          "source": "  fireUpGroup : function(name,item,obj){",
          "coverage": ""
        },
        "127": {
          "source": "    var _self = this,",
          "coverage": 1
        },
        "128": {
          "source": "      itemName = _self.get('itemName'),",
          "coverage": ""
        },
        "129": {
          "source": "      groupName = _self.get('groupName');",
          "coverage": ""
        },
        "130": {
          "source": "    obj = obj || {};",
          "coverage": 1
        },
        "131": {
          "source": "    obj[itemName] =  item;",
          "coverage": 1
        },
        "132": {
          "source": "    if(groupName){",
          "coverage": 1
        },
        "133": {
          "source": "      obj[groupName] = _self.get('parent')",
          "coverage": 1
        },
        "134": {
          "source": "    }",
          "coverage": ""
        },
        "135": {
          "source": "    _self.fireUp(itemName.toLowerCase() + name,obj);",
          "coverage": 1
        },
        "136": {
          "source": "  }",
          "coverage": ""
        },
        "137": {
          "source": "});",
          "coverage": ""
        },
        "138": {
          "source": "",
          "coverage": ""
        },
        "139": {
          "source": "module.exports = Item;",
          "coverage": 1
        },
        "140": {
          "source": "",
          "coverage": ""
        }
      }
    },
    {
      "filename": "/Users/dxq613/Desktop/work/acharts/achart-plot/src/plotrange.js",
      "coverage": 100,
      "hits": 46,
      "misses": 0,
      "sloc": 46,
      "source": {
        "1": {
          "source": "/**",
          "coverage": ""
        },
        "2": {
          "source": " * @fileOverview 坐标轴区域",
          "coverage": ""
        },
        "3": {
          "source": " * @ignore",
          "coverage": ""
        },
        "4": {
          "source": " */",
          "coverage": ""
        },
        "5": {
          "source": "",
          "coverage": ""
        },
        "6": {
          "source": "var Util = require('achart-util');\t",
          "coverage": 1
        },
        "7": {
          "source": "",
          "coverage": ""
        },
        "8": {
          "source": "function min(x,y){",
          "coverage": ""
        },
        "9": {
          "source": "\treturn x > y ? y : x;",
          "coverage": 24
        },
        "10": {
          "source": "}",
          "coverage": ""
        },
        "11": {
          "source": "function max(x,y){",
          "coverage": ""
        },
        "12": {
          "source": "\treturn x > y ? x : y;",
          "coverage": 24
        },
        "13": {
          "source": "}",
          "coverage": ""
        },
        "14": {
          "source": "",
          "coverage": ""
        },
        "15": {
          "source": "/**",
          "coverage": ""
        },
        "16": {
          "source": " * @class Chart.PlotRange",
          "coverage": ""
        },
        "17": {
          "source": " * 用于计算是否在坐标轴内的帮助类",
          "coverage": ""
        },
        "18": {
          "source": " * @protected",
          "coverage": ""
        },
        "19": {
          "source": " */",
          "coverage": ""
        },
        "20": {
          "source": "function PlotRange(start,end){",
          "coverage": ""
        },
        "21": {
          "source": "\tthis.start = start;",
          "coverage": 3
        },
        "22": {
          "source": "\tthis.end = end;",
          "coverage": 3
        },
        "23": {
          "source": "\tthis.init();",
          "coverage": 3
        },
        "24": {
          "source": "};",
          "coverage": ""
        },
        "25": {
          "source": "",
          "coverage": ""
        },
        "26": {
          "source": "",
          "coverage": ""
        },
        "27": {
          "source": "Util.augment(PlotRange,{",
          "coverage": 1
        },
        "28": {
          "source": "",
          "coverage": ""
        },
        "29": {
          "source": "\t//初始化",
          "coverage": ""
        },
        "30": {
          "source": "\tinit : function(){",
          "coverage": ""
        },
        "31": {
          "source": "\t\tvar plotRange = this;",
          "coverage": 6
        },
        "32": {
          "source": "",
          "coverage": ""
        },
        "33": {
          "source": "\t\tstart = plotRange.start;",
          "coverage": 6
        },
        "34": {
          "source": "  \tend = plotRange.end;",
          "coverage": 6
        },
        "35": {
          "source": "",
          "coverage": ""
        },
        "36": {
          "source": "  \t//top-left",
          "coverage": ""
        },
        "37": {
          "source": "  \t  var tl = plotRange.tl = {};",
          "coverage": 6
        },
        "38": {
          "source": "  \t  tl.x = min(start.x,end.x);",
          "coverage": 6
        },
        "39": {
          "source": "  \t  tl.y = min(start.y,end.y);",
          "coverage": 6
        },
        "40": {
          "source": "  \t",
          "coverage": ""
        },
        "41": {
          "source": "",
          "coverage": ""
        },
        "42": {
          "source": "  \t//top-right",
          "coverage": ""
        },
        "43": {
          "source": "  \t\tvar tr = plotRange.tr = {};",
          "coverage": 6
        },
        "44": {
          "source": "  \t\ttr.x = max(start.x,end.x);",
          "coverage": 6
        },
        "45": {
          "source": "  \t\ttr.y = min(start.y,end.y);",
          "coverage": 6
        },
        "46": {
          "source": "  \t//bottom-left",
          "coverage": ""
        },
        "47": {
          "source": "  \t\tvar bl = plotRange.bl = {};",
          "coverage": 6
        },
        "48": {
          "source": "  \t\tbl.x = min(start.x,end.x);",
          "coverage": 6
        },
        "49": {
          "source": "  \t\tbl.y = max(start.y,end.y);",
          "coverage": 6
        },
        "50": {
          "source": "",
          "coverage": ""
        },
        "51": {
          "source": "  \t//bottom-right",
          "coverage": ""
        },
        "52": {
          "source": "  \t\tvar br = plotRange.br = {};",
          "coverage": 6
        },
        "53": {
          "source": "  \t\tbr.x = max(start.x,end.x);",
          "coverage": 6
        },
        "54": {
          "source": "  \t\tbr.y = max(start.y,end.y);",
          "coverage": 6
        },
        "55": {
          "source": "",
          "coverage": ""
        },
        "56": {
          "source": "  \t\tvar cc = plotRange.cc = {};",
          "coverage": 6
        },
        "57": {
          "source": "  \t\tcc.x = (br.x - tl.x)/2 + tl.x;",
          "coverage": 6
        },
        "58": {
          "source": "  \t\tcc.y = (br.y - tl.y)/2 + tl.y;",
          "coverage": 6
        },
        "59": {
          "source": "  \t",
          "coverage": ""
        },
        "60": {
          "source": "\t},",
          "coverage": ""
        },
        "61": {
          "source": "  /**",
          "coverage": ""
        },
        "62": {
          "source": "   * 重置",
          "coverage": ""
        },
        "63": {
          "source": "   * @param  {Object} start 开始点",
          "coverage": ""
        },
        "64": {
          "source": "   * @param  {Object} end   结束点",
          "coverage": ""
        },
        "65": {
          "source": "   */",
          "coverage": ""
        },
        "66": {
          "source": "  reset : function(start,end){",
          "coverage": ""
        },
        "67": {
          "source": "    this.start = start;",
          "coverage": 3
        },
        "68": {
          "source": "    this.end = end;",
          "coverage": 3
        },
        "69": {
          "source": "    this.init();",
          "coverage": 3
        },
        "70": {
          "source": "  },",
          "coverage": ""
        },
        "71": {
          "source": "\t/**",
          "coverage": ""
        },
        "72": {
          "source": "\t * 是否在范围内",
          "coverage": ""
        },
        "73": {
          "source": "\t * @param {Number} x x坐标",
          "coverage": ""
        },
        "74": {
          "source": "\t * @param {Number} y y坐标",
          "coverage": ""
        },
        "75": {
          "source": "\t * @return {Boolean}   是否在范围内",
          "coverage": ""
        },
        "76": {
          "source": "\t */",
          "coverage": ""
        },
        "77": {
          "source": "\tisInRange : function(x,y){",
          "coverage": ""
        },
        "78": {
          "source": "\t\tif(Util.isObject(x)){",
          "coverage": 4
        },
        "79": {
          "source": "\t\t\ty = x.y;",
          "coverage": 1
        },
        "80": {
          "source": "\t\t\tx = x.x;",
          "coverage": 1
        },
        "81": {
          "source": "\t\t}",
          "coverage": ""
        },
        "82": {
          "source": "\t\tvar  plotRange = this,",
          "coverage": 4
        },
        "83": {
          "source": "\t\t\ttl = plotRange.tl,",
          "coverage": ""
        },
        "84": {
          "source": "\t\t\tbr = plotRange.br;",
          "coverage": ""
        },
        "85": {
          "source": "",
          "coverage": ""
        },
        "86": {
          "source": "\t\treturn x >= tl.x && x <= br.x && y >= tl.y && y <= br.y;",
          "coverage": 4
        },
        "87": {
          "source": "\t},",
          "coverage": ""
        },
        "88": {
          "source": "\t/**",
          "coverage": ""
        },
        "89": {
          "source": "\t * 是否在垂直范围内",
          "coverage": ""
        },
        "90": {
          "source": "\t * @param  {Number}  y y坐标",
          "coverage": ""
        },
        "91": {
          "source": "\t * @return {Boolean} 在垂直范围内",
          "coverage": ""
        },
        "92": {
          "source": "\t */",
          "coverage": ""
        },
        "93": {
          "source": "\tisInVertical : function(y){",
          "coverage": ""
        },
        "94": {
          "source": "",
          "coverage": ""
        },
        "95": {
          "source": "\t\tif(Util.isObject(y)){",
          "coverage": 5
        },
        "96": {
          "source": "\t\t\ty = y.y;",
          "coverage": 1
        },
        "97": {
          "source": "\t\t}",
          "coverage": ""
        },
        "98": {
          "source": "",
          "coverage": ""
        },
        "99": {
          "source": "\t\tvar  plotRange = this,",
          "coverage": 5
        },
        "100": {
          "source": "\t\t\ttl = plotRange.tl,",
          "coverage": ""
        },
        "101": {
          "source": "\t\t\tbr = plotRange.br;",
          "coverage": ""
        },
        "102": {
          "source": "",
          "coverage": ""
        },
        "103": {
          "source": "\t\treturn y >= tl.y && y <= br.y;",
          "coverage": 5
        },
        "104": {
          "source": "\t},",
          "coverage": ""
        },
        "105": {
          "source": "\t/**",
          "coverage": ""
        },
        "106": {
          "source": "\t * 是否在水平范围内",
          "coverage": ""
        },
        "107": {
          "source": "\t * @param  {Number}  x x坐标",
          "coverage": ""
        },
        "108": {
          "source": "\t * @return {Boolean}  是否在水平范围内",
          "coverage": ""
        },
        "109": {
          "source": "\t */",
          "coverage": ""
        },
        "110": {
          "source": "\tisInHorizontal : function(x){",
          "coverage": ""
        },
        "111": {
          "source": "",
          "coverage": ""
        },
        "112": {
          "source": "\t\tif(Util.isObject(x)){",
          "coverage": 5
        },
        "113": {
          "source": "\t\t\tx = x.x;",
          "coverage": 1
        },
        "114": {
          "source": "\t\t}",
          "coverage": ""
        },
        "115": {
          "source": "",
          "coverage": ""
        },
        "116": {
          "source": "\t\tvar  plotRange = this,",
          "coverage": 5
        },
        "117": {
          "source": "\t\t\ttl = plotRange.tl,",
          "coverage": ""
        },
        "118": {
          "source": "\t\t\tbr = plotRange.br;",
          "coverage": ""
        },
        "119": {
          "source": "",
          "coverage": ""
        },
        "120": {
          "source": "\t\treturn x >= tl.x && x <= br.x;",
          "coverage": 5
        },
        "121": {
          "source": "\t},",
          "coverage": ""
        },
        "122": {
          "source": "\t/**",
          "coverage": ""
        },
        "123": {
          "source": "\t * 获取宽度",
          "coverage": ""
        },
        "124": {
          "source": "\t * @return {Number} 宽度",
          "coverage": ""
        },
        "125": {
          "source": "\t */",
          "coverage": ""
        },
        "126": {
          "source": "\tgetWidth : function(){",
          "coverage": ""
        },
        "127": {
          "source": "\t\tvar tl = this.tl,",
          "coverage": 6
        },
        "128": {
          "source": "\t\t\tbr = this.br;",
          "coverage": ""
        },
        "129": {
          "source": "\t\treturn br.x - tl.x;",
          "coverage": 6
        },
        "130": {
          "source": "\t},",
          "coverage": ""
        },
        "131": {
          "source": "\t/**",
          "coverage": ""
        },
        "132": {
          "source": "\t * 获取宽度",
          "coverage": ""
        },
        "133": {
          "source": "\t * @return {Number} 宽度",
          "coverage": ""
        },
        "134": {
          "source": "\t */",
          "coverage": ""
        },
        "135": {
          "source": "\tgetHeight : function(){",
          "coverage": ""
        },
        "136": {
          "source": "\t\tvar tl = this.tl,",
          "coverage": 6
        },
        "137": {
          "source": "\t\t\tbr = this.br;",
          "coverage": ""
        },
        "138": {
          "source": "\t\treturn br.y - tl.y;",
          "coverage": 6
        },
        "139": {
          "source": "\t}",
          "coverage": ""
        },
        "140": {
          "source": "",
          "coverage": ""
        },
        "141": {
          "source": "});",
          "coverage": ""
        },
        "142": {
          "source": "",
          "coverage": ""
        },
        "143": {
          "source": "module.exports = PlotRange;",
          "coverage": 1
        },
        "144": {
          "source": "",
          "coverage": ""
        }
      }
    }
  ],
  "stats": {
    "suites": 5,
    "tests": 19,
    "passes": 19,
    "pending": 0,
    "failures": 0,
    "start": "2014-08-21T02:25:19.741Z",
    "end": "2014-08-21T02:25:21.338Z",
    "duration": 1598
  },
  "tests": [
    {
      "title": "inherit",
      "fullTitle": "achart-plotItem inherit",
      "duration": 3
    },
    {
      "title": "events",
      "fullTitle": "achart-plotItem events",
      "duration": 3
    },
    {
      "title": "fireup",
      "fullTitle": "achart-plotItem fireup",
      "duration": 2
    },
    {
      "title": "get visible children",
      "fullTitle": "achart-plotItem get visible children",
      "duration": 7
    },
    {
      "title": "init test",
      "fullTitle": "achart-plotrange init test",
      "duration": 1
    },
    {
      "title": "tl,bl,tr,br",
      "fullTitle": "achart-plotrange tl,bl,tr,br",
      "duration": 6
    },
    {
      "title": "in horizontal",
      "fullTitle": "achart-plotrange in horizontal",
      "duration": 3
    },
    {
      "title": "in vertical",
      "fullTitle": "achart-plotrange in vertical",
      "duration": 2
    },
    {
      "title": "in range",
      "fullTitle": "achart-plotrange in range",
      "duration": 5
    },
    {
      "title": "width",
      "fullTitle": "achart-plotrange width",
      "duration": 1
    },
    {
      "title": "height",
      "fullTitle": "achart-plotrange height",
      "duration": 0
    },
    {
      "title": "plotrange",
      "fullTitle": "achart-plotback plotback rect plotrange",
      "duration": 1
    },
    {
      "title": "margin",
      "fullTitle": "achart-plotback plotback rect margin",
      "duration": 2
    },
    {
      "title": "border",
      "fullTitle": "achart-plotback plotback rect border",
      "duration": 2
    },
    {
      "title": "background",
      "fullTitle": "achart-plotback plotback rect background",
      "duration": 2
    },
    {
      "title": "change margin",
      "fullTitle": "achart-plotback plotback rect change margin",
      "duration": 503
    },
    {
      "title": "change canvas width,height",
      "fullTitle": "achart-plotback plotback rect change canvas width,height",
      "duration": 504
    },
    {
      "title": "image",
      "fullTitle": "achart-plotback plotback image image",
      "duration": 3
    },
    {
      "title": "change",
      "fullTitle": "achart-plotback plotback image change",
      "duration": 514
    }
  ],
  "failures": [],
  "passes": [
    {
      "title": "inherit",
      "fullTitle": "achart-plotItem inherit",
      "duration": 3
    },
    {
      "title": "events",
      "fullTitle": "achart-plotItem events",
      "duration": 3
    },
    {
      "title": "fireup",
      "fullTitle": "achart-plotItem fireup",
      "duration": 2
    },
    {
      "title": "get visible children",
      "fullTitle": "achart-plotItem get visible children",
      "duration": 7
    },
    {
      "title": "init test",
      "fullTitle": "achart-plotrange init test",
      "duration": 1
    },
    {
      "title": "tl,bl,tr,br",
      "fullTitle": "achart-plotrange tl,bl,tr,br",
      "duration": 6
    },
    {
      "title": "in horizontal",
      "fullTitle": "achart-plotrange in horizontal",
      "duration": 3
    },
    {
      "title": "in vertical",
      "fullTitle": "achart-plotrange in vertical",
      "duration": 2
    },
    {
      "title": "in range",
      "fullTitle": "achart-plotrange in range",
      "duration": 5
    },
    {
      "title": "width",
      "fullTitle": "achart-plotrange width",
      "duration": 1
    },
    {
      "title": "height",
      "fullTitle": "achart-plotrange height",
      "duration": 0
    },
    {
      "title": "plotrange",
      "fullTitle": "achart-plotback plotback rect plotrange",
      "duration": 1
    },
    {
      "title": "margin",
      "fullTitle": "achart-plotback plotback rect margin",
      "duration": 2
    },
    {
      "title": "border",
      "fullTitle": "achart-plotback plotback rect border",
      "duration": 2
    },
    {
      "title": "background",
      "fullTitle": "achart-plotback plotback rect background",
      "duration": 2
    },
    {
      "title": "change margin",
      "fullTitle": "achart-plotback plotback rect change margin",
      "duration": 503
    },
    {
      "title": "change canvas width,height",
      "fullTitle": "achart-plotback plotback rect change canvas width,height",
      "duration": 504
    },
    {
      "title": "image",
      "fullTitle": "achart-plotback plotback image image",
      "duration": 3
    },
    {
      "title": "change",
      "fullTitle": "achart-plotback plotback image change",
      "duration": 514
    }
  ]
}